@using Caja
@inject ICajaService service

<div class="grid-container">
    <div class="grid-item header">Billete</div>
    <div class="grid-item header">Cantidad</div>
    <div class="grid-item header">Subtotal </div>

    @if (Caja != null)
    {
        @foreach (var billete in Caja.Billetes)
        {
            <div class="grid-item">
                @billete.Key
            </div>
            <div class="grid-item">
                <input type="number" value="@billete.Value">
            </div>
            <div class="grid-item">
                @(billete.Key * billete.Value)
            </div>  
        }
        <div class="grid-item">
            <button class="btn btn-primary" @onclick="Save">Guardar</button>
        </div>
    }
</div>

@code {
    [Parameter]
    public DateTime CurrentDate { get; set; }
    private DetalleCaja? Caja { get; set; }

    override protected async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await LoadData();
    }

    async Task LoadData()
    {
        Caja = await service.GetDetalleCaja(CurrentDate);
    }

    async Task Save()
    {
        await service.SetDetalleCaja(Caja);
        await LoadData();
    }
}
