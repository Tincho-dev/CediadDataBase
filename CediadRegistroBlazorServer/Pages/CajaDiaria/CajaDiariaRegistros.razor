@using CediadDataBase;
@inject RegistrosService service

<h3>Caja Diaria Registros</h3>
<EditForm Model="SelectedDate" OnValidSubmit="Submit">
    <InputDate @bind-Value="SelectedDate" @oninput="OnDateChanged" />
</EditForm>

@if (Registros != null && Registros.Count > 0)
{
    <table class="table">
        <thead>
            <tr>
                <th>Monto</th>
                <th>Descripción</th>
                <th>Título</th>
                <th>Categoría</th>
                <th>Método de Pago</th>
                <th>Guardar</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var registro in Registros)
            {
                <FilaRegistroCajaDiaria registro="registro" OnSubmit="HandleValidSubmit" />
            }
        </tbody>
    </table>
}

@code {
    private List<Registro> Registros { get; set; }
    private DateTime SelectedDate { get; set; } = DateTime.Now;

    protected override async Task OnInitializedAsync()
    {
        await LoadRecords();
    }

    private async Task LoadRecords()
    {
        Registros = await service.GetRegistros(SelectedDate) ?? new List<Registro>();
        Registros.Insert(0, new Registro());
    }

    private async Task Submit()
    {
        // Handle form submission here
        // You can add additional logic if needed
    }

    // Handle date change
    private async Task OnDateChanged(ChangeEventArgs e)
    {
        if (DateTime.TryParse(e.Value.ToString(), out DateTime newDate))
        {
            SelectedDate = newDate;
            await LoadRecords();
        }
        Console.WriteLine("Date changed");
    }

    private async Task HandleValidSubmit(Registro registro)
    {
        // Logic to save the record to the database using the service
        bool success = await service.AddRegistro(registro);
        if (success)
        {
            await LoadRecords(); // Reload records after adding a new one
        }
        else
        {
            // Handle the error case, show an error message, etc.
        }
    }
}
